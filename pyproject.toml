[project]
name = "smolarith"
version = "0.1.0"
description = ""
authors = [
    {name = "William D. Jones", email = "thor0505@comcast.net"},
]
dependencies = [
    "amaranth>=0.4.1",
]
requires-python = ">=3.8"
readme = "README.md"
license = {text = "MIT"}

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pytest.ini_options]
addopts = "--doctest-glob=\"*.md\""
pythonpath = [
  "src/",
]
markers = [
  "clks: tuple of clocks to register for simulator.",
  "module: top-level module to simulate."
]

[tool.ruff]
src = [ "src", "tests" ]  # https://docs.astral.sh/ruff/faq/#how-does-ruff-determine-which-of-my-imports-are-first-party-third-party-etc
line-length = 79  # flake8 compat
# These will catch missing docstrings and other nits, which pydoclint doesn't.
# Also, add stable-but-disabled checks
lint.extend-select = ["E501", "D"]
lint.pydocstyle.convention = "numpy"
lint.pycodestyle.max-line-length = 79  # flake8 compat
# I don't see the need to document tests like they're a public API.
lint.per-file-ignores = { "tests/**/test_*.py" = ["D103", "D100"] }

[tool.pdm.dev-dependencies]
dev = [
    "pytest>=7.4.2",
    "pytest-sphinx>=0.6.0",
]
doc = [
    "sphinx>=7.1.2",
    "sphinx-rtd-theme>=2.0.0",
    "myst-parser>=2.0.0",
    "sphinx-autobuild>=2021.3.14",
]
lint = [
    "ruff>=0.2.2",
    "pydoclint[flake8]>=0.4.1",
]

[tool.pdm.scripts]
test = "pytest"
lint = { composite = ["ruff check", "flake8", "doc-test"] }
doc = "sphinx-build doc/ doc/_build/"
# FIXME: pytest-sphinx doesn't catch all of these. Remove when it does.
doc-test = "sphinx-build -b doctest doc/ doc/_build"
doc-linkck = "sphinx-build doc/ doc/_linkcheck/ -b linkcheck"
doc-auto = "sphinx-autobuild doc/ doc/_build/ --watch src/smolarith"
